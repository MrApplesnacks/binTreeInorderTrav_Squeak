Object subclass: #BinTree	instanceVariableNames: 'binRoot leftNode rightNode'	classVariableNames: ''	poolDictionaries: ''	category: 'BinTreeCollection'!!BinTree commentStamp: 'rs 3/3/2018 08:45' prior: 0!Tree is the object that stores different object nodes(left/right)in a tree structure!!BinTree methodsFor: 'binTree Constructor' stamp: 'rs 3/3/2018 08:45'!initBinTree: objectItem	"Constructor for NEW BinTree"	binRoot_objectItem.	leftNode_nil.	rightNode_nil.	^self	! !!BinTree methodsFor: 'node Mutators' stamp: 'rs 3/3/2018 08:45'!addLeftKid: node	"Add LEFT child for the current node"		node class == self class ifFalse: [ ^false ].	leftNode_node! !!BinTree methodsFor: 'node Mutators' stamp: 'rs 3/3/2018 09:12'!addRightKid: node	"Add RIGHT child for the current node"		node class == self class ifFalse: [ ^false ].	rightNode_node! !!BinTree methodsFor: 'node Accessors' stamp: 'rs 3/3/2018 09:12'!btObject	"return BIN ROOT"	^binRoot! !!BinTree methodsFor: 'node Accessors' stamp: 'rs 3/3/2018 09:12'!left	"returns LEFT node"	^leftNode! !!BinTree methodsFor: 'node Accessors' stamp: 'rs 3/3/2018 09:20'!right	"returns RIGHT node"	^rightNode! !!BinTree methodsFor: 'display BinTree' stamp: 'rs 3/3/2018 10:45'!print	"comment stating purpose of message"		^binRoot printString! !BinTree class	instanceVariableNames: ''!!BinTree class methodsFor: 'initialization of new class object' stamp: 'rs 3/3/2018 11:25'!new: objectItem	"Initialize new instance of BinTree with objectItem"		^(self new)	initBinTree: objectItem! !